给定一个字符串S，通过将字符串S中的每个字母转变大小写，我们可以获得一个新的字符串。返回所有可能得到的字符串集合。

示例： 输入：S = "a1b2"
输出：["a1b2", "a1B2", "A1b2", "A1B2"]

输入：S = "3z4"
输出：["3z4", "3Z4"]

输入：S = "12345"
输出：["12345"]

提示：

S的长度不超过12。 S仅由数字和字母组成。 通过次数33,982提交次数50,360

来源：力扣（LeetCode） 链接：https://leetcode-cn.com/problems/letter-case-permutation
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

````java
class Solution {
    List<String> res = new ArrayList<>();

    public List<String> letterCasePermutation(String s) {
        char[] chars = s.toCharArray();
        fun(chars, 0);
        return res;
    }

    void fun(char[] chars, int idx) {
        if (idx == chars.length) {
            res.add(new String(chars));
            return;
        }
        if (Character.isLetter(chars[idx])) {
            fun(chars, idx + 1);
            if (Character.isLowerCase(chars[idx])) chars[idx] = Character.toUpperCase(chars[idx]);
            else chars[idx] = Character.toLowerCase(chars[idx]);
        }
        fun(chars, idx + 1);
    }
}
````