从扑克牌中随机抽5张牌，判断是不是一个顺子，即这5张牌是不是连续的。2～10为数字本身，A为1，J为11，Q为12，K为13，而大、小王为 0 ，可以看成任意数字。A 不能视为 14。

示例1:

输入: [1,2,3,4,5]
输出: True

示例2:

输入: [0,0,1,2,5]
输出: True

限制：

数组长度为 5

数组的数取值为 [0, 13] .

通过次数68,733提交次数150,465

来源：力扣（LeetCode） 链接：https://leetcode-cn.com/problems/bu-ke-pai-zhong-de-shun-zi-lcof
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

````java
//我的解法
class Solution {
    public boolean isStraight(int[] nums) {
        Arrays.sort(nums);
        int num0 = 0;
        int delta = 0;
        for (int i = 0; i < nums.length - 1; i++) {
            if (nums[i] == 0)
                num0++;
            else {
                if (nums[i + 1] - nums[i] == 0)
                    return (false);
                delta += (nums[i + 1] - nums[i] - 1);
            }
        }
        if (nums[4] == 0)
            num0++;
        if (num0 >= delta)
            return (true);
        else return (false);
    }
}

//大佬解法
class Solution {
    public boolean isStraight(int[] nums) {
        int joker = 0;
        Arrays.sort(nums); // 数组排序
        for (int i = 0; i < 4; i++) {
            if (nums[i] == 0) joker++; // 统计大小王数量
            else if (nums[i] == nums[i + 1]) return false; // 若有重复，提前返回 false
        }
        return nums[4] - nums[joker] < 5; // 最大牌 - 最小牌 < 5 则可构成顺子
    }
}
````