给定一个仅包含数字2-9的字符串，返回所有它能表示的字母组合。答案可以按 任意顺序 返回。

给出数字到字母的映射如下（与电话按键相同）。注意 1 不对应任何字母。

示例 1：

输入：digits = "23"
输出：["ad","ae","af","bd","be","bf","cd","ce","cf"]
示例 2：

输入：digits = ""
输出：[]
示例 3：

输入：digits = "2"
输出：["a","b","c"]

提示：

0 <= digits.length <= 4 digits[i] 是范围 ['2', '9'] 的一个数字。 通过次数280,070提交次数493,394

来源：力扣（LeetCode） 链接：https://leetcode-cn.com/problems/letter-combinations-of-a-phone-number
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

````java
class Solution {
    List<String> res = new ArrayList();
    StringBuilder sb = new StringBuilder();
    String[] strs = new String[]{"abc", "def", "ghi", "jkl", "mno", "pqrs", "tuv", "wxyz"};

    public List<String> letterCombinations(String digits) {
        if (digits.length() == 0) return res;
        dfs(digits, 0);
        return res;
    }

    void dfs(String str, int idx) {
        if (idx == str.length()) {
            res.add(sb.toString());
            return;
        }
        for (int i = 0; i < strs[Integer.parseInt(String.valueOf(str.charAt(idx))) - 2].length(); i++) {
            sb.append(strs[Integer.parseInt(String.valueOf(str.charAt(idx))) - 2].charAt(i));
            dfs(str, idx + 1);
            sb.deleteCharAt(sb.toString().length() - 1);
        }
    }
}

````