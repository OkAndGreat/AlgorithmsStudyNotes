给你一个整数数组nums ，数组中的元素 互不相同 。返回该数组所有可能的子集（幂集）。

解集 不能 包含重复的子集。你可以按 任意顺序 返回解集。

示例 1：

输入：nums = [1,2,3]
输出：[[],[1],[2],[1,2],[3],[1,3],[2,3],[1,2,3]]
示例 2：

输入：nums = [0]
输出：[[],[0]]

提示：

1 <= nums.length <= 10 -10 <= nums[i] <= 10 nums 中的所有元素 互不相同 通过次数261,159提交次数326,858

来源：力扣（LeetCode） 链接：https://leetcode-cn.com/problems/subsets
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

````java
class Solution {
    List<List<Integer>> res = new ArrayList();
    public List<List<Integer>> subsets(int[] nums) {
        dfs(nums);
        return res;
    }

    void dfs(int[] nums){
        List<Integer> temp = new ArrayList();
        res.add(temp);
        for(int i=0;i<nums.length;i++){
            temp.add(nums[i]);
            res.add(new ArrayList(temp));
            dfs(temp,nums,i+1);
            temp.remove(temp.size()-1);
        }
    }

    void dfs(List<Integer> temp,int[] nums,int idx){
        if(idx==nums.length) return;
        for(int i=idx;i<nums.length;i++){
            //dfs(temp,nums,i+1); 本来想用这句来表示选择 发现不对
            temp.add(nums[i]);
            dfs(temp,nums,i+1);
            res.add(new ArrayList(temp));
            temp.remove(temp.size()-1);
        }
    }
}
````